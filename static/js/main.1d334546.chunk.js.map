{"version":3,"sources":["components/feedback/FeedbackOptionsstyled.js","components/feedback/FeedbackOptions .js","components/notification/NotificationStyled.js","components/notification/Notification.js","components/sections/SectionWrapperStyled.js","components/sections/Sections.js","components/statistic/StatisticsStyled.js","components/statistic/Statistics.js","components/AppStyled.js","components/App.js","index.js"],"names":["Wrapper","styled","div","FeedbackOptions","state","onHandleClick","className","Object","keys","map","item","type","data-name","onClick","toUpperCase","slice","Notification","message","Sections","title","children","Statistics","total","positivePercentage","StatisticsList","propTypes","PropTypes","object","func","App","good","neutral","bad","e","key","target","dataset","name","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","totalPositive","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"ghCAEA,IAgCeA,EAhCCC,IAAOC,IAAV,KCwBEC,EAtBS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAChC,OACE,cAAC,EAAD,UACE,oBAAIC,UAAU,sBAAd,SACGC,OAAOC,KAAKJ,GAAOK,KAAI,SAACC,GAAD,OACtB,oBAAIJ,UAAU,sBAAd,SACE,wBACEA,UAAU,qBACVK,KAAK,SAELC,YAAWF,EACXG,QAASR,EALX,SAOGK,EAAK,GAAGI,cAAgBJ,EAAKK,MAAM,IAJ/BL,IAJgCA,W,yLCPnD,IASeV,EATCC,IAAOC,IAAV,KCUEc,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,cAAC,EAAD,UACE,oBAAIX,UAAU,eAAd,SAA8BW,O,oTCLpC,IAeejB,EAfCC,IAAOC,IAAV,KCaEgB,EAXE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACE,cAAC,EAAD,UACE,0BAASd,UAAU,WAAnB,UACE,oBAAIA,UAAU,kBAAd,SAAiCa,IAChCC,Q,yUCPT,IAeepB,EAfCC,IAAOC,IAAV,KCuBEmB,EArBI,SAAC,GAA0C,IAAxCjB,EAAuC,EAAvCA,MAAOkB,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAClC,OACE,eAAC,EAAD,WACE,oBAAIjB,UAAU,uBAAd,SACGC,OAAOC,KAAKJ,GAAOK,KAAI,SAACC,GAAD,OACtB,oBAAIJ,UAAU,uBAAd,SACE,oBAAGA,UAAU,wBAAb,UACGI,EAAK,GAAGI,cAAgBJ,EAAKK,MAAM,GADtC,IAC2C,IACzC,sBAAMT,UAAU,6BAAhB,SAA8CF,EAAMM,OAFZA,IADFA,QAQ9C,oBAAGJ,UAAU,mBAAb,oBAAwCgB,KACxC,oBAAGhB,UAAU,mBAAb,gCACsBiB,EADtB,W,+OASNC,EAAeC,UAAY,CACzBrB,MAAOsB,IAAUC,OACjBL,MAAOI,IAAUE,KACjBL,mBAAoBG,IAAUE,MC5BhC,IASe5B,EATCC,IAAOC,IAAV,KC2DE2B,E,4MArDbzB,MAAQ,CACN0B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP3B,cAAgB,SAAC4B,GACf,IAAMC,EAAMD,EAAEE,OAAOC,QAAQC,KAC7B,EAAKC,UAAS,SAACC,GAAD,sBAAcL,EAAMK,EAAKL,GAAO,O,EAGhDM,mBAAqB,WAAO,IAAD,EACM,EAAKpC,MACpC,OAFyB,EACjB0B,KADiB,EACXC,QADW,EACFC,K,EAGzBS,gCAAkC,WAAO,IAC/BX,EAAS,EAAK1B,MAAd0B,KACFY,EAAgBZ,EAAOA,EAAO,EAAKU,qBAAuB,EAChE,OAAOG,KAAKC,MAAsB,IAAhBF,I,uDAKlB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAUvB,MAAM,wBAAhB,SACE,cAAC,EAAD,CAIEf,MAAOyC,KAAKzC,MACZC,cAAewC,KAAKxC,kBAGxB,cAAC,EAAD,CAAUc,MAAM,aAAhB,SACG0B,KAAKL,qBACJ,cAAC,EAAD,CAIEpC,MAAOyC,KAAKzC,MACZkB,MAAOuB,KAAKL,qBACZjB,mBAAoBsB,KAAKJ,oCAG3B,cAAC,EAAD,CAAcxB,QAAQ,+B,GA9ChB6B,a,MCFlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1d334546.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  .feedback__list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-bottom: 40px;\r\n  }\r\n  .feedback__list-item:not(:last-child) {\r\n    margin-right: 9px;\r\n  }\r\n  .feedback__list-btn {\r\n    display: inline-block;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 1.63;\r\n    color: #212121;\r\n    background-color: #ffdab9;\r\n    padding: 6px 22px;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 4px;\r\n    outline: none;\r\n  }\r\n  //.feedback__list-btn:focus,\r\n  .feedback__list-btn:hover {\r\n    color: #fff;\r\n    background-color: #dda0dd;\r\n    box-shadow: 7px 7px 12px 3px rgba(0, 0, 0, 0.42);\r\n    transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FeedbackButtons from \"./FeedbackOptionsstyled\";\r\n\r\nconst FeedbackOptions = ({ state, onHandleClick }) => {\r\n  return (\r\n    <FeedbackButtons>\r\n      <ul className=\"list feedback__list\">\r\n        {Object.keys(state).map((item) => (\r\n          <li className=\"feedback__list-item\" key={item}>\r\n            <button\r\n              className=\"feedback__list-btn\"\r\n              type=\"button\"\r\n              key={item}\r\n              data-name={item}\r\n              onClick={onHandleClick}\r\n            >\r\n              {item[0].toUpperCase() + item.slice(1)}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </FeedbackButtons>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  state: PropTypes.object,\r\n  onHandleClick: PropTypes.func,\r\n};\r\n\r\n// import React from \"react\";\r\n\r\n// const FeedbackOptions = ({ good, neutral, bad, onHandleClick }) => {\r\n//   return (\r\n//     <>\r\n//       <button type=\"button\" data-name={good} onClick={onHandleClick}>\r\n//         {good[0].toUpperCase() + good.slice(1)}\r\n//       </button>\r\n//       <button type=\"button\" data-name={neutral} onClick={onHandleClick}>\r\n//         {neutral[0].toUpperCase() + neutral.slice(1)}\r\n//       </button>\r\n//       <button type=\"button\" data-name={bad} onClick={onHandleClick}>\r\n//         {bad[0].toUpperCase() + bad.slice(1)}\r\n//       </button>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default FeedbackOptions;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  .notification {\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 1.63;\r\n    color: #212121;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NotificationWrapper from \"./NotificationStyled\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <NotificationWrapper>\r\n      <h3 className=\"notification\">{message}</h3>\r\n    </NotificationWrapper>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  .feedback {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n  .feedback__title {\r\n    font-weight: 500;\r\n    font-size: 17px;\r\n    line-height: 1.63;\r\n    color: #212121;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SectionWrapper from \"./SectionWrapperStyled\";\r\n\r\nconst Sections = ({ title, children }) => {\r\n  return (\r\n    <SectionWrapper>\r\n      <section className=\"feedback\">\r\n        <h2 className=\"feedback__title\">{title}</h2>\r\n        {children}\r\n      </section>\r\n    </SectionWrapper>\r\n  );\r\n};\r\n\r\nexport default Sections;\r\n\r\nSections.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  .statistic__list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    margin-left: 40px;\r\n  }\r\n  .statistic__list-item {\r\n    margin-bottom: 10px;\r\n  }\r\n  .statistic__titel {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatisticsList from \"./StatisticsStyled\";\r\n\r\nconst Statistics = ({ state, total, positivePercentage }) => {\r\n  return (\r\n    <StatisticsList>\r\n      <ul className=\"list statistic__list\">\r\n        {Object.keys(state).map((item) => (\r\n          <li className=\"statistic__list-item\" key={item}>\r\n            <p className=\"statistic__list-titel\" key={item}>\r\n              {item[0].toUpperCase() + item.slice(1)}:{\" \"}\r\n              <span className=\"statistic__list-titel-item\">{state[item]}</span>\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <p className=\"statistic__titel\">Total: {total}</p>\r\n      <p className=\"statistic__titel\">\r\n        Positive feedback: {positivePercentage}%\r\n      </p>\r\n    </StatisticsList>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatisticsList.propTypes = {\r\n  state: PropTypes.object,\r\n  total: PropTypes.func,\r\n  positivePercentage: PropTypes.func,\r\n};\r\n\r\n// import React from \"react\";\r\n\r\n// const Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n//   return (\r\n//     <>\r\n//       <p>Cood: {good}</p>\r\n//       <p>Neutral:{neutral}</p>\r\n//       <p>Bad: {bad}</p>\r\n//       <p>Total: {total}</p>\r\n//       <p>Positive feedback: {positivePercentage}%</p>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Statistics;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 20px;\r\n  width: 400px;\r\n  background-color: #fff0f5;\r\n  border-radius: 4px;\r\n  margin: 40px auto;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./feedback/FeedbackOptions \";\nimport Notification from \"./notification/Notification\";\nimport Sections from \"./sections/Sections\";\nimport Statistics from \"./statistic/Statistics\";\nimport AppWrapper from \"./AppStyled\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onHandleClick = (e) => {\n    const key = e.target.dataset.name;\n    this.setState((prev) => ({ [key]: prev[key] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const totalPositive = good ? good / this.countTotalFeedback() : 0;\n    return Math.round(totalPositive * 100);\n  };\n\n  render() {\n    //const { good, neutral, bad } = this.state;\n    return (\n      <AppWrapper>\n        <Sections title=\"Please leave feedback\">\n          <FeedbackOptions\n            // good=\"good\"\n            // neutral=\"neutral\"\n            // bad=\"bad\"\n            state={this.state}\n            onHandleClick={this.onHandleClick}\n          />\n        </Sections>\n        <Sections title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              // good={good}\n              // neutral={neutral}\n              // bad={bad}\n              state={this.state}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Sections>\n      </AppWrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}